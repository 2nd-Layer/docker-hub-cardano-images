#!/bin/bash

set -e

source /usr/local/lib/cardano-node-set-env-variables.sh

MAGIC='--testnet-magic 42'

case "$1" in
  status)
    cardano-cli get-tip ${MAGIC} | tail -n +4 | head -n 3
  ;;
  healthcheck)
    declare -A CNODE_STATE
    CURRENT_CNODE_STATE=$(mktemp)
    if cardano-cli get-tip ${MAGIC} | tail -n +4 | head -n 3 > ${CURRENT_CNODE_STATE}; then
      IFS=$'\n'
      CURRENT_CNODE_STATE=( $(cat ${CURRENT_CNODE_STATE}) )
      CNODE_STATE['currentBlockHash']=$(echo "${CURRENT_CNODE_STATE[0]}" | awk '{ print $3}')
      CNODE_STATE['currentSlot']=$(echo "${CURRENT_CNODE_STATE[1]}" | awk '{ print $2}')
      CNODE_STATE['currentBlockNumber']=$(echo "${CURRENT_CNODE_STATE[2]}" | awk '{ print $3}')
      unset IFS
    else
      >&2 echo "ERROR: Failed to retrieve cardano-node tip!"
      >&2 echo "ERROR: Exiting!"
      exit 0
    fi
    if ! [[ -z ${DEBUG+x} ]]; then
      >&2 echo "DEBUG: currentBlockHash: ${CNODE_STATE['currentBlockHash']}"
      >&2 echo "DEBUG: currentSlot: ${CNODE_STATE['currentSlot']}"
      >&2 echo "DEBUG: currenttBlockNumber: ${CNODE_STATE['currentBlockNumber']}"
    fi
  ;;
  *)
    echo "`basename "$0"` requires an argument... possible options are:"
    echo "`basename "$0"` status"
    echo "`basename "$0"` healthcheck"
esac
